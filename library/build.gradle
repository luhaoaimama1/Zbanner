apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'//添加
android {
    compileSdkVersion 22
    buildToolsVersion '23.0.3'
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError true
    }
}
dependencies {
    compile 'com.android.support:support-v4:22.1.1'
    compile 'com.nineoldandroids:library:2.4.0'
}
//添加
publish {
    userOrg = 'luhaoaimama1'//bintray.com用户名
    groupId = 'com.zone'//jcenter上的路径
    artifactId = 'zbanner'//项目名称
    publishVersion = '1.0.0'//版本号
    desc = 'zbanner is a viewpager about circle~'//描述，不重要
    website = 'https://github.com/luhaoaimama1'//网站，不重要
}





android.libraryVariants.all { variant ->
    println "create generate${variant.name.capitalize()}Javadoc"
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        // title = ''
        // description = ''
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        options {
            encoding "utf-8"
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
    task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
        classifier = 'javadoc'
        from tasks.getByName("generate${variant.name.capitalize()}Javadoc").destinationDir
    }
    artifacts {
        archives tasks.getByName("javadoc${variant.name.capitalize()}Jar")
    }
}


tasks.withType(JavaCompile) { options.encoding = "UTF-8" }


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true // 支持author标记
        version true // 支持version标记
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}


artifacts {
    archives javadocJar
    archives sourcesJar
}